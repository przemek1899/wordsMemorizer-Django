"""
Django settings for words_project project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

from django.utils.translation import ugettext_lazy as _
import os
DEBUG = True
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = os.path.dirname(os.path.dirname(__file__))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=1i1&)v_y0d+!zfakh@setmkp0@$+of_0)-h_kxn2aypi-q_a-'

ALLOWED_HOSTS = (
    'localhost',
)

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'words',
    # 'ocr',
    'oauth2_provider',
    'corsheaders',
    'rest_framework',
    # 'compressor',
    # 'rest_framework.authtoken',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'words.middleware.LoginRequiredMiddleware',
    # 'words.middleware.CheckForAnonymousUserMiddleware'
]

# only in test, demo, debug
CORS_ORIGIN_ALLOW_ALL = True

ROOT_URLCONF = 'words_project.urls'

LANGUAGES = [
    ('it', _('Italian')),
    ('fr', _('French')),
    ('es', _('Spanish')),
    ('en', _('English')),
    ('de', _('German')),
    ('pl', _('Polish')),
    ('pt', _('Portuguese')),
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'words', 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

LOCALE_PATHS = [
    # '/var/local/translations/locale',
    # os.path.join(BASE_DIR, 'translations', 'locale')
    '/home/osboxes/root_directory/words_memory/words_django/words_project/translations/locale',
    '/home/osboxes/root_directory/words_memory/words_django/words_project/words/locale',
]
# print('for debugging locale path: ' + os.path.join(BASE_DIR, 'translations', 'locale'))

# Login constants
LOGIN_URL = '/login/'
LOGOUT_URL = '/logout/'
LOGIN_REDIRECT_URL = '/main/'
LOGOUT_REDIRECT_URL = '/login/'


# TEMPLATE_DIRS = (
#     os.path.join(BASE_DIR, 'templates'),
    # os.path.join(BASE_DIR, 'frontend', 'templates'),
    # os.path.join(BASE_DIR, 'patients_frontend', 'templates')
# )
print('for debugging templates path: ' + os.path.join(BASE_DIR, 'templates'))
WSGI_APPLICATION = 'words_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }
DATABASES = dict()
DATABASES['default'] = {
    "ENGINE": "django.db.backends.postgresql_psycopg2",
    "NAME": "words",
    "USER": "osboxes",
    "PASSWORD": "osboxes",
    "HOST": 'localhost',
    "PORT": "",
}

DEFAULT_PORT = "8888"
# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

SESSION_EXPIRE_AT_BROWSER_CLOSE = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR + '/static-server/'  # 'var/www/words/static/
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        # 'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
        'oauth2_provider.ext.rest_framework.OAuth2Authentication',
    )
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'null': {
            'level': 'DEBUG',
            'class': 'logging.NullHandler',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
    },
    'loggers': {
        'dajaxice': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
    }
}

# ==========================================================#
# Load local settings file                                  #
# ==========================================================#
# ===============KEEP AT THE BOTTOM=========================#
try:
    from settings_local import *
except ImportError as e:
    print "Nie podano pliku konfiguracji lokalnych"


